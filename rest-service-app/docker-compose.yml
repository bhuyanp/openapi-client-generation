version: '3.3'

services:
  product-db-devl:
    image: 'postgres:latest'
    restart: always
    container_name: product-db-devl
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      POSTGRES_USER: product_app
      POSTGRES_PASSWORD: pass1
      POSTGRES_DB: productdb
    ports:
      - "5432:5432"
    volumes:
      - ${PWD}/product-data-devl/:/var/lib/postgresql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U myuser -d mydb" ]
      interval: 10s
      timeout: 5s
      retries: 3

  product-db-prod:
    image: 'postgres:latest'
    restart: always
    container_name: product-db-prod
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      POSTGRES_USER: product_app
      POSTGRES_PASSWORD: pass1
      POSTGRES_DB: productdb
    ports:
      - "5433:5432"
    volumes:
      - ${PWD}/product-data-prod/:/var/lib/postgresql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U myuser -d mydb" ]
      interval: 10s
      timeout: 5s
      retries: 3

  product-app-devl:
    build:
      context: .
    image: product-app
    container_name: "product-app-devl"
    ports:
      - 8080:8080
    environment:
      SPRING_PROFILES_ACTIVE: devl
      SPRING_DATASOURCE_URL: jdbc:postgresql://product-db-devl:5432/productdb
    depends_on:
      product-db-devl:
        condition: service_healthy

  product-app-prod:
    build: .
    image: product-app
    container_name: "product-app-prod"
    ports:
      - 9080:9080
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:postgresql://product-db-prod:5432/productdb
    depends_on:
      product-db-prod:
        condition: service_healthy


volumes:
  product-data-devl:
  product-data-prod:
