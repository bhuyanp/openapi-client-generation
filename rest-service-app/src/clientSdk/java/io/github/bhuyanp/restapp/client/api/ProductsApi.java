/*
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.16.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package io.github.bhuyanp.restapp.client.api;

import io.github.bhuyanp.restapp.client.model.ProblemDetail;
import io.github.bhuyanp.restapp.client.model.Product;
import io.github.bhuyanp.restapp.client.model.ProductRequest;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.service.annotation.*;
import org.springframework.web.multipart.MultipartFile;

import java.util.List;
import java.util.Map;
import java.util.Optional;
import jakarta.annotation.Generated;


@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2025-10-23T17:05:35.167278-04:00[America/New_York]", comments = "Generator version: 7.16.0")
public interface ProductsApi {

    /**
     * POST /api/v1/products
     *
     * @param productRequest  (required)
     * @return Invalid request. (status code 400)
     *         or Unable to add the product. (status code 500)
     *         or Forbidden. Invalid or missing bearer token. (status code 403)
     *         or Created (status code 201)
     */
    @HttpExchange(
        method = "POST",
        value = "/api/v1/products",
        accept = { "application/json" },
        contentType = "application/json"
    )
    ResponseEntity<Product> addProduct(
         @RequestBody ProductRequest productRequest
    );


    /**
     * GET /api/v1/products/{id}
     *
     * @param id  (required)
     * @return No product found matching the id. (status code 404)
     *         or Unable to process the request. (status code 500)
     *         or Forbidden. Invalid or missing bearer token. (status code 403)
     *         or OK (status code 200)
     */
    @HttpExchange(
        method = "GET",
        value = "/api/v1/products/{id}",
        accept = { "application/json" }
    )
    ResponseEntity<Product> getProductById(
         @PathVariable("id") String id
    );


    /**
     * GET /api/v1/products
     *
     * @return Unable to process the request. (status code 500)
     *         or Forbidden. Invalid or missing bearer token. (status code 403)
     *         or OK (status code 200)
     */
    @HttpExchange(
        method = "GET",
        value = "/api/v1/products",
        accept = { "application/json" }
    )
    ResponseEntity<List<Product>> getProducts(
        
    );


    /**
     * PATCH /api/v1/products/{id}
     *
     * @param id  (required)
     * @param productRequest  (required)
     * @return Invalid request. (status code 400)
     *         or Unable to partially update the product. (status code 500)
     *         or Forbidden. Invalid or missing bearer token. (status code 403)
     *         or No Content (status code 204)
     */
    @HttpExchange(
        method = "PATCH",
        value = "/api/v1/products/{id}",
        accept = { "application/json" },
        contentType = "application/json"
    )
    ResponseEntity<Void> partiallyUpdateProduct(
         @PathVariable("id") String id,
         @RequestBody ProductRequest productRequest
    );


    /**
     * PUT /api/v1/products/{id}
     *
     * @param id  (required)
     * @param productRequest  (required)
     * @return Invalid request. (status code 400)
     *         or Unable to update the product. (status code 500)
     *         or Forbidden. Invalid or missing bearer token. (status code 403)
     *         or No Content (status code 204)
     */
    @HttpExchange(
        method = "PUT",
        value = "/api/v1/products/{id}",
        accept = { "application/json" },
        contentType = "application/json"
    )
    ResponseEntity<Void> updateProduct(
         @PathVariable("id") String id,
         @RequestBody ProductRequest productRequest
    );

}
